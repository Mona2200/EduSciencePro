@using EduSciencePro.ViewModels.Response
@model LookingPostViewModel;

@{
    ViewData["Title"] = @Model.Post.Title;
    Layout = "_Layout";
}

<div class="border_blue p-4 m-3 bg-white justify-content-center">
    <div class="col-md-10 m-auto">
        <h3 class="mb-5 mt-5 underline_h3 text-center">@Model.Post.Title</h3>
        <div class="d-flex flex-row align-items-center">
            @if (Model.Post.User.Image != null)
            {
                <div style="height:40px;width:40px;background-image:url(data:image/jpeg;base64,@(Convert.ToBase64String(Model.Post.User.Image)));background-position:center;background-size:cover;"></div>
            }
            else
            {
                <div style="height:40px;width:40px;background-image:url(/src/7fb117f2628e83a0fdfc18e0a3dc7cc0.png);background-position:center;background-size:cover;"></div>
            }
            @{
                var fullName = $"{Model.Post.User.FirstName} {Model.Post.User.LastName} {Model.Post.User.MiddleName}";
            }
            <span style="margin:0 10px;">@fullName</span>
            <p class="color-blue" style="margin:0 10px;">@Model.Post.CreatedDate</p>
        </div>
        <div class="mt-5 posts_content">
            <p class="posts_content">@Html.Raw(Model.Post.Content)</p>
        </div>

        <p>
            @if (Model.Post.Tags != null)
            {
                @foreach (var tag in Model.Post.Tags)
                {
                    <span class="bg_blue p-2 m-2 d-inline-block">@tag.Name</span>
                }
            }
        </p>

        <p class="row mt-4">
            <span class="col-xl-3 col-xxl-2 col-lg-4 col-md-2 col-sm-4 col-sm-4 col-5">
                <span>@Model.Post.Likes.Length</span>
                @if (Context.User.Identity.IsAuthenticated)
                {
                    @if (Model.Post.Likes.FirstOrDefault(l => l.UserId == Model.UserId) != null)
                    {
                        <svg width="20" height="19" viewBox="0 0 20 19" fill="none" xmlns="http://www.w3.org/2000/svg" style="cursor:pointer;" onclick="like_post('@Model.Post.Id', this)">
                            <path d="M10 18.35L8.55 17.03C3.4 12.36 0 9.27 0 5.5C0 2.41 2.42 0 5.5 0C7.24 0 8.91 0.81 10 2.08C11.09 0.81 12.76 0 14.5 0C17.58 0 20 2.41 20 5.5C20 9.27 16.6 12.36 11.45 17.03L10 18.35Z" fill="#F8312F" />
                        </svg>
                    }
                    else
                    {
                        <svg width="20" height="19" viewBox="0 0 20 19" fill="none" xmlns="http://www.w3.org/2000/svg" style="cursor:pointer;" onclick="like_post('@Model.Post.Id', this)">
                            <path d="M10 18.35L8.55 17.03C3.4 12.36 0 9.27 0 5.5C0 2.41 2.42 0 5.5 0C7.24 0 8.91 0.81 10 2.08C11.09 0.81 12.76 0 14.5 0C17.58 0 20 2.41 20 5.5C20 9.27 16.6 12.36 11.45 17.03L10 18.35Z" fill="#CDE7FF" />
                        </svg>
                    }
                }
                else
                {
                    <svg width="20" height="19" viewBox="0 0 20 19" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M10 18.35L8.55 17.03C3.4 12.36 0 9.27 0 5.5C0 2.41 2.42 0 5.5 0C7.24 0 8.91 0.81 10 2.08C11.09 0.81 12.76 0 14.5 0C17.58 0 20 2.41 20 5.5C20 9.27 16.6 12.36 11.45 17.03L10 18.35Z" fill="#CDE7FF" />
                    </svg>
                }

            </span>

            <span class="col-xl-3 col-xxl-2 col-lg-4 col-md-2 col-sm-4 col-sm-4 col-5">
                <span>@Model.Post.Comments.Length</span>
                <svg width="20" height="19" viewBox="0 0 20 19" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M18.3 18.3L16 16H2C1.45 16 0.979333 15.8043 0.588 15.413C0.196 15.021 0 14.55 0 14V2C0 1.45 0.196 0.979 0.588 0.587C0.979333 0.195667 1.45 0 2 0H18C18.55 0 19.021 0.195667 19.413 0.587C19.8043 0.979 20 1.45 20 2V17.575C20 18.025 19.796 18.3373 19.388 18.512C18.9793 18.6873 18.6167 18.6167 18.3 18.3Z" fill="#CDE7FF" />
                </svg>
            </span>

            @if (Model.Post.User.Email == Context.User.Identity.Name || Context.User.Claims.FirstOrDefault(c => c.Value == "Модератор") != null)
            {
                <span style="cursor:pointer;font-size: 25px;" class="ability_post col-xl-6 col-xxl-8 col-lg-4 col-md-8 col-sm-4 col-sm-4 col-2 color-blue text-end">…</span>
                <div class="div_ability_post d-none position-absolute border_blue menu_width" style="background-color: white;right: 0;transform: translate(-50%, -120px);padding:0;">
                    <a asp-action="EditPost" asp-controller="Post" asp-route-postId="@Model.Post.Id" class="p-2 border_bottom_dark m-0 d-block">Редактировать</a>
                    <a asp-action="DeletePost" asp-controller="Post" asp-route-postId="@Model.Post.Id" class="p-2 border_bottom_dark m-0 d-block">Удалить</a>
                </div>
            }
        </p>
    </div>
</div>

@if (Context.User.Identity.IsAuthenticated)
{
    @await Html.PartialAsync("~/Views/Comment/AddComment.cshtml", Model.AddComment)
}


@await Html.PartialAsync("~/Views/Comment/CommentsByPost.cshtml", new KeyValuePair<Guid, CommentViewModel[]>(Model.Post.Id, Model.Post.Comments))